name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create: null

jobs:
  main_build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            name: linux64
            installer: deb
            pattern: target/debian/*.deb
          - os: windows-latest
            name: windows64
            installer: wix
            pattern: target/wix/*.msi

    steps:
    - uses: actions/checkout@v4

    - name: Install Wix3
      if: runner.os == 'Windows'
      run: |
        curl -LJO https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314-binaries.zip
        7z x wix314-binaries.zip -o${{ github.workspace }}/wix

    - name: Install linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -qqq
        sudo apt-get install -y -qqq mingw-w64 liblzma-dev dpkg-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev

    - run: rustup toolchain install stable --profile minimal

    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: true

    - name: Check format
      run: cargo fmt --check

    - name: Build exe
      run: cargo build --release

    - name: Tests
      run: cargo test --release --tests --workspace

    - name: Build launcher
      if: runner.os == 'Linux'
      run: |
        rustup target add x86_64-pc-windows-gnu
        cargo build --release --bin ff8_launcher --target x86_64-pc-windows-gnu
        cp target/x86_64-pc-windows-gnu/release/ff8_launcher.exe target/release/

    - name: Install cargo-${{ matrix.installer }}
      run: cargo install cargo-${{ matrix.installer }}

    - name: Build installer
      if: runner.os == 'Windows'
      working-directory: ${{ github.workspace }}/gui
      run: cargo wix --nocapture --no-build -p moomba --bin-path ${{ github.workspace }}/wix

    - name: Build installer
      if: runner.os == 'Linux'
      run: cargo deb --no-build -p moomba

    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{ matrix.name }}
        path: ${{ github.workspace }}/${{ matrix.pattern }}

  release_assets:
    name: Release
    needs:
    - main_build
    concurrency: release-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
    - name: Download Files
      uses: actions/download-artifact@v4

    - name: Deploy Package
      if: github.event.ref_type != 'tag' && github.ref == 'refs/heads/master'
      uses: crowbarmaster/GH-Automatic-Releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "continuous"
        prerelease: true
        title: "Unstable Build"
        files: |
          artifact-*/*

    - name: Deploy Package
      if: github.event.ref_type == 'tag'
      uses: crowbarmaster/GH-Automatic-Releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        title: ${{ github.event.ref }}
        files: |
          artifact-*/*
