import { Switch, ScrollView, SpinBox, ComboBox, GroupBox, Button, Palette, StandardButton, HorizontalBox, GridBox, LineEdit, VerticalBox } from "std-widgets.slint";
import { Installations } from "../../global.slint";

export component OptionsDisplayPage inherits VerticalLayout {
    VerticalBox {
        Text {
            text: @tr("Display Options");
            font-size: 20px;
        }
    }

    ScrollView {
        vertical-stretch: 1;
        horizontal-stretch: 1;

        VerticalBox {
            max-width: 664px;

            GroupBox {
                title: @tr("Window configuration");
                vertical-stretch: 0;

                VerticalBox {

                    HorizontalBox {
                        alignment: start;

                        Switch {
                            text: @tr("Fullscreen");
                            checked: Installations.ffnx-config.fullscreen;

                            toggled() => {
                                Installations.set-ffnx-config-bool("fullscreen", self.checked);
                                Installations.set-ffnx-config-int("current_resolution", resolution.current-index)
                            }
                        }
                        Switch {
                            text: @tr("Borderless");
                            checked: Installations.ffnx-config.borderless;

                            toggled() => {
                                Installations.set-ffnx-config-bool("borderless", self.checked)
                            }
                        }
                    }

                    HorizontalBox {
                        alignment: start;

                        Text {
                            text: @tr("Fullscreen resolution");
                            vertical-alignment: TextVerticalAlignment.center;
                        }

                        resolution := ComboBox {
                            model: Installations.resolutions;
                            enabled: self.model.length > 1;
                            current-index: Installations.ffnx-config.current-resolution;

                            selected() => {
                                Installations.set-ffnx-config-int("current_resolution", self.current-index)
                            }
                        }
                    }

                    HorizontalBox {
                        alignment: start;

                        Text {
                            text: @tr("Internal resolution scale");
                            vertical-alignment: TextVerticalAlignment.center;
                        }

                        ComboBox {
                            property<[int]> values: [0, 1, 2, 4, 8];
                            property<[int]> reverse: [0, 1, 2, 2, 3, 3, 3, 3, 4];
                            model: [@tr("Auto"), "x1", "x2", "x4", "x8"];
                            current-index: self.reverse[Installations.ffnx-config.internal-resolution-scale];

                            selected() => {
                                Installations.set-ffnx-config-int("internal_resolution_scale", self.values[self.current-index])
                            }
                        }
                    }

                    HorizontalBox {
                        alignment: start;

                        Text {
                            text: @tr("Screen refresh rate");
                            vertical-alignment: TextVerticalAlignment.center;
                        }

                        ComboBox {
                            model: Installations.refresh-rates;
                            enabled: self.model.length > 1;
                            current-index: Installations.ffnx-config.current-refresh-rate;

                            selected() => {
                                Installations.set-ffnx-config-current-refresh-rate(resolution.current-index, self.current-index)
                            }
                        }
                    }

                    Rectangle {
                        vertical-stretch: 1;
                    }
                }
            }

            GroupBox {
                title: @tr("Graphics");
                vertical-stretch: 0;

                VerticalBox {
                    HorizontalBox {
                        alignment: start;

                        Text {
                            text: @tr("Rendering backend");
                            vertical-alignment: TextVerticalAlignment.center;
                        }

                        ComboBox {
                            property<[int]> values: [0, 1, 3, 4, 5];
                            property<[int]> reverse: [0, 1, 0, 2, 3, 4];
                            model: [@tr("Auto"), @tr("OpenGL"), @tr("Direct3D11"), @tr("Direct3D12"), @tr("Vulkan")];
                            current-index: self.reverse[Installations.ffnx-config.renderer_backend];

                            selected() => {
                                Installations.set-ffnx-config-int("renderer_backend", self.values[self.current-index])
                            }
                        }
                    }

                    HorizontalBox {
                        alignment: start;

                        Text {
                            text: @tr("Antialiasing");
                            vertical-alignment: TextVerticalAlignment.center;
                        }

                        ComboBox {
                            property<[int]> values: [0, 2, 4, 8, 16];
                            property<[int]> reverse: [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4];
                            model: [@tr("Disabled"), "2x", "4x", "8x", "16x"];
                            current-index: self.reverse[Installations.ffnx-config.enable_antialiasing];

                            selected() => {
                                Installations.set-ffnx-config-int("enable_antialiasing", self.values[self.current-index])
                            }
                        }
                    }

                    HorizontalBox {
                        alignment: start;

                        Switch {
                            text: @tr("VSYNC");
                            checked: Installations.ffnx-config.enable_vsync;

                            toggled() => {
                                Installations.set-ffnx-config-bool("enable_vsync", self.checked)
                            }
                        }

                        Switch {
                            text: @tr("Anisotropic");
                            checked: Installations.ffnx-config.enable_anisotropic;

                            toggled() => {
                                Installations.set-ffnx-config-bool("enable_anisotropic", self.checked)
                            }
                        }

                        Switch {
                            text: @tr("Bilinear filtering");
                            checked: Installations.ffnx-config.enable_bilinear;

                            toggled() => {
                                Installations.set-ffnx-config-bool("enable_bilinear", self.checked)
                            }
                        }
                    }
                }
            }

            Rectangle {
                vertical-stretch: 1;
            }
        }
    }
}
